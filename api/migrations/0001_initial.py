# Generated by Django 4.2.4 on 2023-08-08 18:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('mobile', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SalaryDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctc_gross', models.TextField()),
                ('ctc_take_home', models.TextField()),
                ('ctc_bonus_perks', models.TextField()),
                ('bond_contract', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TestType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ppt', models.BooleanField()),
                ('shortlist_from_resume', models.BooleanField()),
                ('written_test', models.BooleanField()),
                ('online_test', models.BooleanField()),
                ('technical_test', models.BooleanField()),
                ('aptitude_test', models.BooleanField()),
                ('psychometric_test', models.BooleanField()),
                ('group_discussion', models.BooleanField()),
                ('personal_interview', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='api_users', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='api_users', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SelectionProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eligibility_criteria', models.TextField()),
                ('allow_backlog_students', models.BooleanField()),
                ('test_duration', models.CharField(max_length=50)),
                ('likely_topics', models.TextField()),
                ('number_of_rounds', models.PositiveIntegerField()),
                ('group_discussion_duration', models.CharField(max_length=50)),
                ('number_of_offers', models.PositiveIntegerField()),
                ('preferred_period', models.CharField(max_length=50)),
                ('logistics_requirements', models.TextField()),
                ('interested_discipline', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, default=dict), size=None)),
                ('test_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.testtype')),
            ],
        ),
        migrations.CreateModel(
            name='JAFForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation_name', models.CharField(max_length=255)),
                ('organisation_postal_address', models.TextField()),
                ('organisation_website', models.URLField()),
                ('organisation_type_options', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('organisation_type_others', models.TextField()),
                ('industry_sector_options', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('industry_sector_others', models.TextField()),
                ('job_profile_designation', models.CharField(max_length=255)),
                ('job_profile_job_description', models.TextField()),
                ('job_profile_job_description_pdf', django.contrib.postgres.fields.ArrayField(base_field=models.FileField(upload_to='job_description_pdfs/'), size=None)),
                ('job_profile_place_of_posting', models.CharField(max_length=255)),
                ('contact_details_first_person_of_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_person_of_contactJAF', to='api.contactdetails')),
                ('contact_details_head_hr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_hrJAF', to='api.contactdetails')),
                ('contact_details_second_person_of_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_person_of_contactJAF', to='api.contactdetails')),
                ('salary_details_b_tech', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='b_tech', to='api.salarydetails')),
                ('salary_details_m_sc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='m_sc', to='api.salarydetails')),
                ('salary_details_m_tech', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='m_tech', to='api.salarydetails')),
                ('salary_details_phd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phd', to='api.salarydetails')),
                ('selection_process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selection_processJAF', to='api.selectionprocess')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='INFForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation_name', models.CharField(max_length=255)),
                ('organisation_postal_address', models.TextField()),
                ('organisation_website', models.URLField()),
                ('organisation_type_options', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('organisation_type_others', models.TextField()),
                ('industry_sector_options', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('industry_sector_others', models.TextField()),
                ('job_profile_designation', models.CharField(max_length=255)),
                ('job_profile_job_description', models.TextField()),
                ('job_profile_job_description_pdf', django.contrib.postgres.fields.ArrayField(base_field=models.FileField(upload_to='job_description_pdfs/'), size=None)),
                ('job_profile_place_of_posting', models.CharField(max_length=255)),
                ('job_profile_two_months_intern', models.BooleanField()),
                ('job_profile_six_months_intern', models.BooleanField()),
                ('job_profile_joint_master_thesis_program', models.BooleanField()),
                ('stipend_details_stipend_amount', models.TextField()),
                ('stipend_details_bonus_perks_incentives', models.TextField()),
                ('stipend_details_accodation_trip_fare', models.TextField()),
                ('stipend_details_bonus_service_contract', models.TextField()),
                ('contact_details_first_person_of_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_person_of_contactINF', to='api.contactdetails')),
                ('contact_details_head_hr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_hrINF', to='api.contactdetails')),
                ('contact_details_second_person_of_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_person_of_contactINF', to='api.contactdetails')),
                ('selection_process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selection_processINF', to='api.selectionprocess')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
